<?php
/**
 * Created by PhpStorm.
 * User: rong
 * Date: 17-11-11
 * Time: 下午3:55
 */
namespace app\admin\controller;

use think\Db;
use think\Request;
class Admin extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 管理员列表
     * @return mixed|string
     */
    public function index()
    {
        $adminList = Db::name('staffs')->order('staffId','asc')->paginate('9');
        $this->assign('adminlist',$adminList);
        return $this->fetch();
    }

    /**
     * 搜索
     * @param Request $request
     * @return mixed|string|void
     */
    public function search(Request $request)
    {
        if($request->isPost()){
            $loginName = trim($request->post('adminname'));
            $role = $request->post('juese');
            $status = $request->post('status');
            $where = [];
            if(!empty($loginName)){
                $where['loginName'] = ['like',"%$loginName%"];
            }
            if($role != null){
                $where['staffRoleId'] = $role;
            }
            if($status != null){
                $where['staffStatus'] = $status;
            }
            $res = Db::name('staffs')->where($where)
                ->order('staffId','asc')->paginate(10);
            $this->assign('adminlist',$res);
            return $this->fetch('index');
        }else{
            return ;
        }
    }

    /**
     * 个人中心
     * @param Request $request
     * @return mixed|string
     */
    public function personal(Request $request)
    {
        $id = $request->get('id');
        if($id){
            $userInfo = Db::name('staffs')->where('staffId',$id)->find();
            $this->assign('userinfo',$userInfo);
            return $this->fetch();
        }else{
           $name =  getUserId();
           $userInfo = Db::name('staffs')->where('loginName',$name)->find();
           $this->assign('userinfo',$userInfo);
           return $this->fetch();
        }
    }

    /**
     * 改变管理员状态
     * @param Request $request
     * @return \think\response\Json|void
     */
    public function changestatus(Request $request)
    {
        if($request->isPost()){
            $code = $request->post('code');
            $id = $request ->post('id');
            $res = [];
            if(empty($id)){
                $res['status']=0;
                return json($res);
            }else{
                $st = Db::name('staffs')->where('staffId',$id)->update(['staffStatus'=>$code]);
                if ($st){
                    $res['status']=1;
                    return json($res);
                }
            }
        }else{
            return;
        }
    }

    /**
     * 修改信息
     * @param Request $request
     * @return \think\response\Json|void
     */
    public function changeInfo(Request $request)
    {
        if ($request->isPost()) {
            $uid = $request->post('id');
            $name = $request->post('userName');
            $sex = $request->post('sex');
            $email = $request->post('email');
            $rtd = [];
            if (!empty($uid)) {
                $res = Db::name('staffs')->where('staffId', $uid)->update(['loginName' => $name, 'sex' => $sex, 'email' => $email]);
                if ($res) {
                    $rtd['status'] = 1;
                    $rtd['msg'] = "修改成功!";
                    return json($rtd);
                }else{
                    $rtd['status'] = 2;
                    $rtd['msg'] = "未做任何修改!";
                    return json($rtd);
                }
            } else {
                $Im = getUserId();
                $res = Db::name('staffs')->where('loginName', $Im)->update(['loginName' => $name, 'sex' => $sex, 'email' => $email]);
                if ($res) {
                    $rtd['status'] = 1;
                    $rtd['msg'] = "修改成功!";
                    return json($rtd);
                }

            }
        } else {
            return;
        }
    }

    /**
     * 修改密码
     * @param Request $request
     * @return array|void
     */
    public function changePwd(Request $request)
    {
        if ($request->isPost()) {
            $uid = $request->post('id');
            $oldPwd = $request->post('oldPwd');
            $pwd1 = $request->post('newPwd');
            $pwd2 = $request->post('newPw');
            if (!empty($uid)) {
                $res = Db::name('staffs')->where('staffId', $uid)->find();
                if ($res['loginPwd'] != md5($oldPwd . $res['secretKey'])) {
                    return RDReturn('旧密码错误!', 2);
                }
                if ($pwd1 != $pwd2) {
                    return RDReturn('两次密码不一致!', 3);
                }
                $change = Db::name('staffs')->where('staffId', $uid)->update(['loginPwd' => md5($pwd2 . $res['secretKey'])]);
                if ($change) {
                    return RDReturn('修改成功!', 1);
                }
            } else {
                $Im = getUserId();
                $res = Db::name('staffs')->where('loginName', $Im)->find();
                if ($res['loginPwd'] != md5($oldPwd . $res['secretKey'])) {
                    return RDReturn('旧密码错误!', 2);
                }
                if ($pwd1 != $pwd2) {
                    return RDReturn('两次密码不一致!', 3);
                }
                $change = Db::name('staffs')->where('loginName', $Im)->update(['loginPwd' => md5($pwd2 . $res['secretKey'])]);
                if ($change) {
                    return RDReturn('修改成功!', 1);

                }
            }
        } else {
            return;
        }
    }

    /**
     * 保存管理员
     * @param Request $request
     * @return array|void
     */
    public function saveUser(Request $request)
    {
        if ($request->isPost()) {
            $name = trim($request->post('name'));
            $user = Db::name('staffs')->where('loginName', $name)->find();
            if ($user) {
                return RDReturn('用户已经存在');
            }
            $password = trim($request->post('pwd'));
            $data = [
                'loginName' => $name,
                'loginPwd' => md5($password . "9365"),
                'secretKey' => 9365,
                'sex' => $request->post('sex'),
                'staffStatus' => 1,
                'email' => trim($request->post('email')),
                'staffRoleId' => trim($request->post('juese')),
                'createTime' => date('Y-m-d H:m:s', time())
            ];
            $res = Db::name('staffs')->insert($data);
            if ($res) {
                return RDReturn('添加成功', 1);
            }
        } else {
            return;
        }
    }

}